services:
  mongodb:
    image: mongo:7.0
    container_name: assistant-aggregator-mongodb
    restart: unless-stopped
    environment:
      MONGO_INITDB_ROOT_USERNAME: admin
      MONGO_INITDB_ROOT_PASSWORD: password123
      MONGO_INITDB_DATABASE: assistant_aggregator
    ports:
      - "27017:27017"
    volumes:
      - mongodb_data:/data/db
      - ./mongo-init:/docker-entrypoint-initdb.d
    networks:
      - assistant-aggregator-network
    healthcheck:
      test: ["CMD", "mongosh", "--eval", "db.adminCommand('ping')"]
      interval: 10s
      timeout: 5s
      retries: 5

  minio:
    image: minio/minio:latest
    container_name: assistant-aggregator-minio
    restart: unless-stopped
    command: server /data --console-address ":9001"
    environment:
      MINIO_ROOT_USER: minioadmin
      MINIO_ROOT_PASSWORD: minioadmin123
      MINIO_DEFAULT_BUCKETS: assistant-aggregator,documents,images,uploads
    ports:
      - "9000:9000"  # MinIO API
      - "9001:9001"  # MinIO Console
    volumes:
      - minio_data:/data
    networks:
      - assistant-aggregator-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:9000/minio/health/live"]
      interval: 30s
      timeout: 20s
      retries: 3

  elasticsearch:
    image: elasticsearch:8.11.0
    container_name: assistant-aggregator-elasticsearch
    restart: unless-stopped
    environment:
      - node.name=elasticsearch
      - cluster.name=assistant-aggregator-cluster
      - discovery.type=single-node
      - bootstrap.memory_lock=true
      - "ES_JAVA_OPTS=-Xms1g -Xmx1g"
      - xpack.security.enabled=false
      - xpack.security.enrollment.enabled=false
    ulimits:
      memlock:
        soft: -1
        hard: -1
    ports:
      - "9200:9200"  # Elasticsearch API
      - "9300:9300"  # Elasticsearch Transport
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - assistant-aggregator-network
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5

  app:
    build: .
    container_name: assistant-aggregator-app
    restart: unless-stopped
    ports:
      - "3000:3000"
    env_file:
      - .env
    volumes:
      - ./logs:/usr/src/app/logs
    depends_on:
      - mongodb
      - minio
      - elasticsearch
    networks:
      - assistant-aggregator-network

  seed:
    image: node:20-bullseye-slim
    container_name: assistant-aggregator-seed
    working_dir: /app
    environment:
      MONGO_URI: mongodb://admin:password123@mongodb:27017/assistant_aggregator?authSource=admin
      MINIO_ENDPOINT: minio
      MINIO_PORT: 9000
      MINIO_USE_SSL: 'false'
      BUCKET: assistant-aggregator
    volumes:
      - .:/app
      - /app/node_modules
    command: >
      sh -c "
        echo '📦 Installing dependencies...' &&
        npm ci --no-audit --no-fund &&
        echo '⏳ Waiting for MongoDB to be ready...' &&
        node scripts/wait-for-mongo.js &&
        echo '🌱 Running seed scripts...' &&
        node scripts/seed-all.js &&
        echo '✅ Seeding completed successfully!'
      "
    depends_on:
      mongodb:
        condition: service_started
      minio:
        condition: service_started
    networks:
      - assistant-aggregator-network
    restart: "no"  # Don't restart after completion

volumes:
  mongodb_data:
  minio_data:
  elasticsearch_data:

networks:
  assistant-aggregator-network:
    driver: bridge
    driver_opts:
      com.docker.network.driver.mtu: 1450
