import { ApiProperty, ApiPropertyOptional } from '@nestjs/swagger';
import { IsArray, IsBoolean, IsEnum, IsMongoId, IsNotEmpty, IsObject, IsOptional, IsString, ValidateNested, IsInt, Min, IsNumber } from 'class-validator';
import { Type } from 'class-transformer';

export class ChatMessagesInputsDto {
  @ApiProperty({ description: 'Similarity threshold (as string)', example: '0.8' })
  @IsString()
  @IsNotEmpty()
  similarityThreshold: string;

  @ApiProperty({ description: 'Number of context items to retrieve', example: 5 })
  @IsInt()
  @Min(0)
  contextCount: number;
}

export enum ChatMessagesResponseMode {
  STREAMING = 'streaming',
  BLOCKING = 'blocking',
}

export class PriorMessageDto {
  @ApiProperty({ description: 'Previous question', example: 'What is AI?' })
  @IsString()
  question: string;

  @ApiProperty({ description: 'Previous answer', example: 'AI is artificial intelligence.' })
  @IsString()
  answer: string;
}

export class ChatMessagesRequestDto {
  @ApiProperty({ description: 'User query text', example: 'What are the Q3 KPIs?' })
  @IsString()
  @IsNotEmpty()
  query: string;

  @ApiProperty({ description: 'Inputs object', type: ChatMessagesInputsDto })
  @ValidateNested()
  @Type(() => ChatMessagesInputsDto)
  @IsOptional()
  inputs?: ChatMessagesInputsDto;

  @ApiProperty({ description: 'Response mode', enum: ChatMessagesResponseMode, example: ChatMessagesResponseMode.BLOCKING })
  @IsEnum(ChatMessagesResponseMode)
  responseMode: ChatMessagesResponseMode;

  @ApiProperty({ description: 'User ID', example: '507f1f77bcf86cd799439012' })
  @IsMongoId()
  @IsOptional()
  user?: string;

  @ApiPropertyOptional({ description: 'Conversation ID (optional, will create new chat if not provided)', example: '507f1f77bcf86cd799439011' })
  @IsMongoId()
  @IsOptional()
  conversationId?: string;

  @ApiPropertyOptional({ description: 'Associated file IDs', type: [String], example: ['507f1f77bcf86cd799439021'] })
  @IsArray()
  @IsMongoId({ each: true })
  @IsOptional()
  files?: string[];

  @ApiProperty({ description: 'Auto-generated name flag', example: true })
  @IsBoolean()
  autoGeneratedName: boolean;

  @ApiPropertyOptional({ description: 'Previous messages in the conversation', type: [PriorMessageDto], example: [{ question: 'What is AI?', answer: 'AI is artificial intelligence.' }] })
  @IsArray()
  @IsOptional()
  @ValidateNested({ each: true })
  @Type(() => PriorMessageDto)
  priorMessages?: PriorMessageDto[];
}

export class ChatMessagesMetadataDto {
  @ApiPropertyOptional({ description: 'Usage details', type: Object })
  @IsObject()
  @IsOptional()
  usage?: Record<string, any>;
}

export class RetrieverResourceDto {
  @ApiProperty({ description: 'Position in ranking', example: 1 })
  @IsInt()
  @Min(0)
  position: number;

  @ApiProperty({ description: 'Dataset ID', example: 'dataset-123' })
  @IsString()
  dataset_id: string;

  @ApiProperty({ description: 'Dataset name', example: 'Finance Reports' })
  @IsString()
  dataset_name: string;

  @ApiProperty({ description: 'Document name', example: 'Q3_KPI.pdf' })
  @IsString()
  document_name: string;

  @ApiProperty({ description: 'Document ID', example: '507f1f77bcf86cd799439011' })
  @IsString()
  document_id: string;

  @ApiProperty({ description: 'Segment ID', example: 'seg-42' })
  @IsString()
  segment_id: string;

  @ApiProperty({ description: 'Similarity score', example: 0.87 })
  @IsNumber()
  score: number;

  @ApiProperty({ description: 'Content snippet', example: 'The Q3 KPI increased by 15%...' })
  @IsString()
  content: string;
}

export class ChatMessageAnswerResponseDto {
  @ApiProperty({ description: 'Conversation ID' })
  conversation_id: string;

  @ApiProperty({ description: 'Answer content' })
  answer: string;

  @ApiProperty({ description: 'Metadata', type: ChatMessagesMetadataDto })
  metadata: ChatMessagesMetadataDto & { retriever_resources?: RetrieverResourceDto[] };
}

export class ChatMessagesErrorDto {
  @ApiProperty({ description: 'HTTP-style status code', example: 500 })
  status: number;

  @ApiProperty({ description: 'Machine-readable error code', example: 'INTERNAL_ERROR' })
  code: string;

  @ApiProperty({ description: 'Human-readable error message', example: 'Unexpected error while generating answer' })
  message: string;
}
